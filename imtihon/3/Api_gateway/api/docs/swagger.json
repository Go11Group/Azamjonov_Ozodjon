{
    "swagger": "2.0",
    "info": {
        "description": "API service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/items": {
            "get": {
                "description": "Get a paginated list of items from the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get a list of items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetItemsRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new item to the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Add a new item",
                "parameters": [
                    {
                        "description": "Create Item Request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/items/search": {
            "get": {
                "description": "Search and filter items based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Search and filter items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Condition",
                        "name": "condition",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.SearchItemsAndFilterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/items/{item_id}": {
            "get": {
                "description": "Get an existing item from the inventory by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get an item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetItemRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit an existing item in the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Edit an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Item Request",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing item from the inventory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/eco_challenges": {
            "post": {
                "description": "Create a new eco challenge in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eco_challenges"
                ],
                "summary": "Create a new eco challenge",
                "parameters": [
                    {
                        "description": "Create Eco Challenge Request",
                        "name": "eco_challenge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateEcoChallengeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateEcoChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/eco_challenges/participate": {
            "post": {
                "description": "Participate in an eco challenge in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eco_challenges"
                ],
                "summary": "Participate in an eco challenge",
                "parameters": [
                    {
                        "description": "Create Participate Challenge Request",
                        "name": "participate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateParticipateChallengeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateParticipateChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/eco_challenges/result": {
            "put": {
                "description": "Update the result of an eco challenge in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eco_challenges"
                ],
                "summary": "Update the result of an eco challenge",
                "parameters": [
                    {
                        "description": "Update Eco Challenge Result Request",
                        "name": "result",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateEcoChallengeResultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateEcoChallengeResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/eco_tips": {
            "get": {
                "description": "Get eco tips from the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eco_tips"
                ],
                "summary": "Get eco tips",
                "parameters": [
                    {
                        "description": "Get Add Eco Tips Request",
                        "name": "eco_tips",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.GetAddEcoTipsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetAddEcoTipsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new eco tips in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "eco_tips"
                ],
                "summary": "Add new eco tips",
                "parameters": [
                    {
                        "description": "Create Eco Tip Request",
                        "name": "eco_tips",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateEcoTipRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateEcoTipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/item_categories": {
            "post": {
                "description": "Create a new item category in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_categories"
                ],
                "summary": "Create a new item category",
                "parameters": [
                    {
                        "description": "Create Item Category Request",
                        "name": "item_category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateItemCategoryManageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateItemCategoryManageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recycling_centers": {
            "post": {
                "description": "Add a new recycling center in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recycling_centers"
                ],
                "summary": "Add a new recycling center",
                "parameters": [
                    {
                        "description": "Create Recycling Center Request",
                        "name": "recycling_center",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRecyclingCenterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRecyclingCenterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recycling_centers/search": {
            "post": {
                "description": "Search for recycling centers in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recycling_centers"
                ],
                "summary": "Search for recycling centers",
                "parameters": [
                    {
                        "description": "Search Recycling Center Request",
                        "name": "recycling_center",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.SearchRecyclingCenterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.SearchRecyclingCenterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recycling_submissions": {
            "post": {
                "description": "Create a new recycling submission in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recycling_submissions"
                ],
                "summary": "Create a new recycling submission",
                "parameters": [
                    {
                        "description": "Create Recycling Submissions Request",
                        "name": "recycling_submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRecyclingSubmissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRecyclingSubmissionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/statistics": {
            "post": {
                "description": "Get statistics from the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get statistics",
                "parameters": [
                    {
                        "description": "Get Statistics Request",
                        "name": "statistics",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.GetStatisticsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swaps": {
            "post": {
                "description": "Create a new swap request in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Create a new swap request",
                "parameters": [
                    {
                        "description": "Create Swap Request",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateSwapRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateSwapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swaps/accept": {
            "put": {
                "description": "Accept a swap request in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Accept a swap request",
                "parameters": [
                    {
                        "description": "Update Swap Request",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateSwapRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateSwapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swaps/reject": {
            "put": {
                "description": "Reject a swap request in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Reject a swap request",
                "parameters": [
                    {
                        "description": "Update Reject Swap Request",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateRejectSwapRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.UpdateRejectSwapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/swaps/{id}": {
            "get": {
                "description": "Get a swap request by ID from the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "swaps"
                ],
                "summary": "Get a swap request by ID",
                "parameters": [
                    {
                        "description": "Get Change Swap Request",
                        "name": "swap",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.GetChangeSwapRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetChangeSwapResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user_activity": {
            "post": {
                "description": "Get user activity monitoring data from the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_activity"
                ],
                "summary": "Get user activity monitoring data",
                "parameters": [
                    {
                        "description": "Get Monitoring User Activity Request",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.GetMonitoringUserActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetMonitoringUserActivityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user_ratings": {
            "get": {
                "description": "Get user ratings from the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_ratings"
                ],
                "summary": "Get user ratings",
                "parameters": [
                    {
                        "description": "Get Rating Request",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.GetRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/items_service.GetRatingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new user rating in the items service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_ratings"
                ],
                "summary": "Add a new user rating",
                "parameters": [
                    {
                        "description": "Create Rating Request",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/items_service.CreateRatingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "items_service.CreateEcoChallengeRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "reward_points": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateEcoChallengeResponse": {
            "type": "object",
            "properties": {
                "eco_challenge": {
                    "$ref": "#/definitions/items_service.EcoChallenge"
                }
            }
        },
        "items_service.CreateEcoTipRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateEcoTipResponse": {
            "type": "object",
            "properties": {
                "eco_tip": {
                    "$ref": "#/definitions/items_service.EcoTip"
                }
            }
        },
        "items_service.CreateItemCategoryManageRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateItemCategoryManageResponse": {
            "type": "object",
            "properties": {
                "item_category": {
                    "$ref": "#/definitions/items_service.ItemCategory"
                }
            }
        },
        "items_service.CreateItemRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/items_service.Item"
                }
            }
        },
        "items_service.CreateParticipateChallengeRequest": {
            "type": "object",
            "properties": {
                "challengeId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateParticipateChallengeResponse": {
            "type": "object",
            "properties": {
                "challengeId": {
                    "type": "string"
                },
                "joinedAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateRatingRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "rater_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "swap_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateRatingResponse": {
            "type": "object",
            "properties": {
                "rating": {
                    "$ref": "#/definitions/items_service.Rating"
                }
            }
        },
        "items_service.CreateRecyclingCenterRequest": {
            "type": "object",
            "properties": {
                "accepted_materials": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateRecyclingCenterResponse": {
            "type": "object",
            "properties": {
                "recycling_center": {
                    "$ref": "#/definitions/items_service.RecyclingCenter"
                }
            }
        },
        "items_service.CreateRecyclingSubmissionsRequest": {
            "type": "object",
            "properties": {
                "center_id": {
                    "type": "string"
                },
                "itemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.Itemes"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateRecyclingSubmissionsResponse": {
            "type": "object",
            "properties": {
                "center_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "eco_points_earned": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "itemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.Itemes"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateSwapRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "offered_item_id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "requested_item_id": {
                    "type": "string"
                },
                "requester_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "items_service.CreateSwapResponse": {
            "type": "object",
            "properties": {
                "swap": {
                    "$ref": "#/definitions/items_service.Swap"
                }
            }
        },
        "items_service.EcoChallenge": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reward_points": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "items_service.EcoTip": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "items_service.GetAddEcoTipsRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "items_service.GetAddEcoTipsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "tips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.EcoTip"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "items_service.GetChangeSwapRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "items_service.GetChangeSwapResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "swaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.Swap"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "items_service.GetItemRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "items_service.GetItemsRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "items_service.GetMonitoringUserActivityRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.GetMonitoringUserActivityResponse": {
            "type": "object",
            "properties": {
                "eco_points_earned": {
                    "type": "integer"
                },
                "item_listed": {
                    "type": "integer"
                },
                "recycling_submissions": {
                    "type": "integer"
                },
                "swap_completed": {
                    "type": "integer"
                },
                "swap_initiated": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.GetRatingRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.GetRatingResponse": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "ratings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.Rating"
                    }
                },
                "total_ratings": {
                    "type": "integer"
                }
            }
        },
        "items_service.GetStatisticsRequest": {
            "type": "object",
            "properties": {
                "EndDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.GetStatisticsResponse": {
            "type": "object",
            "properties": {
                "top_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.TopCategory"
                    }
                },
                "top_recycling_centers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.TopRecyclingCenter"
                    }
                },
                "total_eco_points_earned": {
                    "type": "integer"
                },
                "total_recycled_items": {
                    "type": "integer"
                },
                "total_swaps": {
                    "type": "integer"
                }
            }
        },
        "items_service.Item": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                }
            }
        },
        "items_service.ItemCategory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "items_service.Itemes": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "material": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "items_service.Rating": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rater_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "swap_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "items_service.RecyclingCenter": {
            "type": "object",
            "properties": {
                "accepted_materials": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "contact_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "working_hours": {
                    "type": "string"
                }
            }
        },
        "items_service.SearchItemsAndFilterResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.Item"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "items_service.SearchRecyclingCenterRequest": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "material": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "items_service.SearchRecyclingCenterResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "recycling_centers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/items_service.RecyclingCenter"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "items_service.Swap": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "offered_item_id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "requested_item_id": {
                    "type": "string"
                },
                "requester_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "items_service.TopCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "swap_count": {
                    "type": "integer"
                }
            }
        },
        "items_service.TopRecyclingCenter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "submission_count": {
                    "type": "integer"
                }
            }
        },
        "items_service.UpdateEcoChallengeResultRequest": {
            "type": "object",
            "properties": {
                "challengeId": {
                    "type": "string"
                },
                "recycledItemsCount": {
                    "type": "integer"
                }
            }
        },
        "items_service.UpdateEcoChallengeResultResponse": {
            "type": "object",
            "properties": {
                "challengeId": {
                    "type": "string"
                },
                "recycledItemsCount": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "items_service.UpdateItemRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "swap_preference": {
                    "type": "string"
                }
            }
        },
        "items_service.UpdateItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/items_service.Item"
                }
            }
        },
        "items_service.UpdateRejectSwapRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "swap_id": {
                    "type": "string"
                }
            }
        },
        "items_service.UpdateRejectSwapResponse": {
            "type": "object",
            "properties": {
                "swap": {
                    "$ref": "#/definitions/items_service.Swap"
                }
            }
        },
        "items_service.UpdateSwapRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "offered_item_id": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "requested_item_id": {
                    "type": "string"
                },
                "requester_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "items_service.UpdateSwapResponse": {
            "type": "object",
            "properties": {
                "swap": {
                    "$ref": "#/definitions/items_service.Swap"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}